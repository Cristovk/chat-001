{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","store","firestore","SignIn","className","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","dummy","useRef","messageRef","collection","query","orderBy","limit","useCollectionData","idField","message","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","ChatMessage","id","ref","onSubmit","value","onChange","target","placeholder","type","disabled","props","messageClass","src","App","useAuthState","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAWCA,IAASC,cAAe,CACvBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,8CAGT,IAAMC,EAAOT,IAASS,OAChBC,EAAQV,IAASW,YAwBvB,IAAMC,EAAS,WAOb,OAEE,wBAAQC,UAAU,UAAUC,QAPL,WACvB,IAAMC,EAAW,IAAIf,IAASS,KAAKO,mBACnCP,EAAKQ,gBAAgBF,IAKrB,sCAMEG,EAAU,WACd,OAAOT,EAAKU,aACV,wBAAQN,UAAU,WAAWC,QAAU,kBAAML,EAAKW,WAAlD,yBAQEC,EAAW,WACf,IAAMC,EAAQC,mBACRC,EAAad,EAAMe,WAAW,WAC9BC,EAAQF,EAAWG,QAAQ,aAAaC,MAAM,IAH/B,EAKJC,YAAkBH,EAAO,CAAEI,QAAS,OAA/CC,EALe,sBAOaC,mBAAS,IAPtB,mBAOdC,EAPc,KAOHC,EAPG,KASfC,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,EAGQ7B,EAAKU,YAAvBoB,EAHU,EAGVA,IAAKC,EAHK,EAGLA,SAHK,SAKZhB,EAAWiB,IAAI,CACnBC,KAAMT,EACNU,UAAW3C,IAASW,UAAUiC,WAAWC,kBACzCN,MACAC,aATgB,OAYlBN,EAAa,IACbZ,EAAMwB,QAAQC,eAAe,CAACC,SAAU,WAbtB,2CAAH,sDAiBjB,OACE,qCACF,iCACGjB,GAAWA,EAAQkB,KAAI,SAAAC,GAAG,OAAI,cAACC,EAAD,CAA0BpB,QAASmB,GAAjBA,EAAIE,OAErD,sBAAMC,IAAK/B,OAIX,uBAAMgC,SAAUnB,EAAhB,UAEA,uBAAOoB,MAAOtB,EAAWuB,SAAU,SAACpB,GAAD,OAAOF,EAAaE,EAAEqB,OAAOF,QAAQG,YAAY,cAEpF,wBAAQC,KAAK,SAASC,UAAW3B,EAAjC,iCAUJ,SAASkB,EAAYU,GAAQ,IAAD,EACMA,EAAM9B,QAA9BW,EADkB,EAClBA,KAAMH,EADY,EACZA,IAAKC,EADO,EACPA,SAEbsB,EAAevB,IAAQ9B,EAAKU,YAAYoB,IAAM,OAAS,WAE7D,OAAQ,mCACN,sBAAK1B,UAAS,kBAAaiD,GAA3B,UACE,qBAAKC,IAAKvB,GAAY,0DACtB,4BAAIE,SAYKsB,MAlHf,WAAgB,IAAD,EAEEC,YAAaxD,GAArByD,EAFM,oBAKb,OACE,sBAAKrD,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACI,kFACA,cAAC,EAAD,OAGJ,kCACIqD,EAAO,cAAC,EAAD,IAAc,cAAC,EAAD,UC3BhBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8432ac7b.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/analytics';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport {useCollectionData} from 'react-firebase-hooks/firestore';\n\n firebase.initializeApp( {\n  apiKey: \"AIzaSyC0aP65s5jwGpFlO_4wxvg1oz5_y3fq1Gw\",\n  authDomain: \"chat00001-420c9.firebaseapp.com\",\n  databaseURL: \"https://chat00001-420c9.firebaseio.com\",\n  projectId: \"chat00001-420c9\",\n  storageBucket: \"chat00001-420c9.appspot.com\",\n  messagingSenderId: \"392093388700\",\n  appId: \"1:392093388700:web:b6e96785a44796d2fc8259\"\n});\n\nconst auth = firebase.auth();\nconst store = firebase.firestore();\n\n\n\nfunction App() {\n\n  const [user] = useAuthState(auth);\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          <h1>üçî‚öõÔ∏èüî•üí¨</h1>\n          <SignOut/>\n      </header>\n\n      <section>\n        { user ? <ChatRoom/> : <SignIn/> }\n      </section>\n\n    </div>\n  );\n}\n\nconst SignIn = ()  => {\n\n  const signInwithGoogle = () =>{\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n  \n  return (\n      \n    <button className='sign-in' onClick={signInwithGoogle} > Registrate con Google </button>\n    \n    );\n}\n\n\nconst SignOut = () => {\n  return auth.currentUser && (\n    <button className='sign.out' onClick={ () => auth.signOut() }> Sign Out </button>\n  )\n\n}\n\n\n//chat\n\nconst ChatRoom = () => {\n  const dummy = useRef();\n  const messageRef = store.collection('message')\n  const query = messageRef.orderBy('createdAt').limit(23);\n\n  const[message] = useCollectionData(query, { idField: 'id'});\n\n  const [formValue, setFormValue] = useState('')\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser; \n\n    await messageRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL,\n    });\n\n    setFormValue('');\n    dummy.current.scrollIntoView({behavior: 'smooth' });\n\n  }\n\n  return(\n    <>\n  <main>\n    {message && message.map(msg => <ChatMessage key={msg.id} message={msg} /> ) }\n    \n    <span ref={dummy}></span>\n    \n  </main>\n\n    <form onSubmit={sendMessage} >\n    \n    <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"explayate\" />\n\n    <button type=\"submit\" disabled={!formValue}>üëª</button>\n\n    </form>\n    </>\n  )\n\n  }\n\n//construccion de mensaje\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return (<>\n    <div className={`message ${messageClass}`}>\n      <img src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} />\n      <p>{text}</p>\n    </div>\n  </>)\n}\n\n\n\n\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}